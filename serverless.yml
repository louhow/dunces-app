service: the-app

frameworkVersion: ">=1.1.0 <=2.20.1"

provider:
  name: aws
  runtime: python3.8
  profile: dunce
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    APP_KEY: ${ssm:/Config/Prod/Dunces/Key~true}
    APP_STATE: ${ssm:/Config/Prod/Dunces/AppState~true}
    SLACK_BOT_TOKEN: ${ssm:/Config/Prod/Slack/BotToken~true}
    SLACK_CLIENT_ID: ${ssm:/Config/Prod/Slack/ClientId~true}
    SLACK_CLIENT_SECRET: ${ssm:/Config/Prod/Slack/ClientSecret~true}
    SLACK_SIGNING_SECRET: ${ssm:/Config/Prod/Slack/SigningSecret~true}
    SPOTIFY_CLIENT_ID: ${ssm:/Config/Prod/SpotifyClientId~true}
    SPOTIFY_CLIENT_SECRET: ${ssm:/Config/Prod/SpotifyClientSecret~true}
    DEFAULT_SPOTIFY_USER_NAME_ENCRYPT: ${ssm:/Config/Prod/SpotifyDefaultUser~true}
    DEFAULT_SPOTIFY_USER_REFRESH_TOKEN_ENCRYPT: ${ssm:/Config/Prod/SpotifyDefaultRefreshToken~true}
    STAGE: ${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  slack:
    handler: slack/event.handler
    events:
      - http:
          path: slack/handler
          method: post
          cors: true
  slack_oauth_pre:
    handler: slack/oauth.pre_install
    events:
      - http:
          path: slack/begin_auth
          method: get
          cors: true
  slack_oauth_post:
    handler: slack/oauth.post_install
    events:
      - http:
          path: slack/end_auth
          method: get
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: PK
            AttributeType: S
          -
            AttributeName: SK
            AttributeType: S
        KeySchema:
          -
            AttributeName: PK
            KeyType: HASH
          -
            AttributeName: SK
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

plugins:
  - serverless-python-requirements
  - serverless-localstack

custom:
  localstack:
    stages:
      - local
    host: http://localhost  # optional - LocalStack host to connect to
    edgePort: 4566  # optional - LocalStack edge port to connect to
    autostart: true  # optional - Start LocalStack in Docker on Serverless deploy
    lambda:
      # Enable this flag to improve performance
      mountCode: True
    docker:
      # Enable this flag to run "docker ..." commands as sudo
      sudo: False
  pythonRequirements:
    dockerizePip: true
